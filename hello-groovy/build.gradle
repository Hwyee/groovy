plugins {
    id 'groovy'
}

group = 'cn.hwyee'
//name = 'hello'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation fileTree('D:/dev/apache-groovy-sdk-4.0.11/groovy-4.0.11/lib!!') {
        include '*.jar'
        include '*/*.jar'
    }
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

def map = new HashMap()
map.put("action", { println "action behave" })
task(map, "demotask") {
    //任务的配置阶段执行
    println '示例:demo task'
    //任务的行为:任务的执行阶段执行
    doFirst {
        println("demo task doFrist")
    }
    doLast {
        println "demo task doLast"
    }
}
//外部定义doFirst和doLast行为
demotask.doFirst {
    println("demo task doFrist out")
}
demotask.doFirst {
    println("demo task doFrist out")
}
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

//任务依赖
tasks.register('A') {
    println "task.A...."
}

task B {
    println "task.B...."
}

task C(dependsOn: ['A', 'B']) {
    println("task.C....")
}

//发布jar包
apply plugin: 'groovy' //必须
apply plugin: 'maven-publish'
dependencies {
    implementation gradleApi() //必须
    implementation localGroovy() //必须
}
repositories {
    google()
    mavenCentral() //必须
}
sourceSets { //把项目入口设置为src/main/groovy
    main {
        groovy {
            srcDir 'src/main/groovy'
        }
    }
}

publishing {
    publications {
        myLibrary(MavenPublication) {
            groupId = 'cn.hwyee.plugin' //指定GAV坐标信息
            artifactId = 'library'
            version = '1.1'
            from components.java //发布jar包
            //from components.web///引入war插件，发布war包
        }
    }
    repositories {
        //可以发布到多个仓库
        //1.maven本地仓库
        //mavenLocal()
        //2.项目根路径
        maven {
            url "$rootDir/lib/release"
        }
        //3.编译路径build目录下
        maven {
            name = 'myRepo' //name属性可选,表示仓库名称，url必填
            //发布地址:可以是本地仓库或者maven私服
            //url = layout.buildDirectory.dir("repo")
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
            def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
        //4.发布项目到私服中
        // maven {
        // name = 'myRepo' //name属性可选,表示仓库名称，url必填
        // //发布地址:可以是本地仓库或者maven私服
        // //url = layout.buildDirectory.dir("repo")
        // //url='http://my.org/repo' // // change URLs to point to your repos, e.g. http://my.org/repo // //认证信息:用户名和密码
        // credentials {
        // username = 'joe' // password = 'secret' // }
        // }
    }
}